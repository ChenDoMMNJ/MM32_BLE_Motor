// Define to prevent recursive inclusion  --------------------------------------
#ifndef __TOUCH_H
#define __TOUCH_H

////////////////////////////////////////////////////////////////////////////////
/// @addtogroup MM32_Example_Layer
/// @{

////////////////////////////////////////////////////////////////////////////////
/// @defgroup EXAMPLE_HMI
/// @brief HMI example modules
/// @{

////////////////////////////////////////////////////////////////////////////////
/// @defgroup GPIO_Exported_Types
/// @{

////////////////////////////////////////////////////////////////////////////////
/// @brief  KEY_Typedef
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
/// @brief  LED_Typedef
////////////////////////////////////////////////////////////////////////////////


/// @}

////////////////////////////////////////////////////////////////////////////////
/// @defgroup HMI_Exported_Variables
/// @{
#ifdef _TOUCH_C_
#define GLOBAL

u8 keyen2 = 0;
u8 keyen3 = 0;
u8 keyen4 = 0;

#else
#define GLOBAL extern

#endif

GLOBAL u8 keyen2;
GLOBAL u8 keyen3;
GLOBAL u8 keyen4;

#undef GLOBAL
/// @}

////////////////////////////////////////////////////////////////////////////////
/// @defgroup HMI_Exported_Functions
/// @{

u8 TPAD_Init(u8 psc);
void TPAD_Reset2(void);
void TPAD_Reset3(void);
void TPAD_Reset4(void);
u16 TPAD_Get_Val2(void);
u16 TPAD_Get_Val3(void);
u16 TPAD_Get_Val4(void);
u16 TPAD_Get_MaxVal2(u8 n);
u16 TPAD_Get_MaxVal3(u8 n);
u16 TPAD_Get_MaxVal4(u8 n);
u8 TPAD_Scan2(u8 mode);
u8 TPAD_Scan3(u8 mode);
u8 TPAD_Scan4(u8 mode);
void TIM3_CH2_3_4_Cap_Init(u16 arr,u16 psc);

/// @}

/// @}

/// @}

////////////////////////////////////////////////////////////////////////////////
#endif
////////////////////////////////////////////////////////////////////////////////
